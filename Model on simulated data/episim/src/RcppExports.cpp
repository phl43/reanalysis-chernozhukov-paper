// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// simulate_epidemic
Rcpp::List simulate_epidemic(const int id, const int simulation_length, const int population, const double seed_rate, const int seed_length, const double R0, const double ifr, const double shape_gt, const double rate_gt, const double shape_ip, const double rate_ip, const double meanlog_i2d, const double sdlog_i2d, const double prob_detection_cases, const double prob_detection_deaths, std::vector<std::string> col_names, const arma::mat features_matrix, const arma::vec effects, const Rcpp::Nullable<Rcpp::IntegerVector> initial_state_);
RcppExport SEXP _episim_simulate_epidemic(SEXP idSEXP, SEXP simulation_lengthSEXP, SEXP populationSEXP, SEXP seed_rateSEXP, SEXP seed_lengthSEXP, SEXP R0SEXP, SEXP ifrSEXP, SEXP shape_gtSEXP, SEXP rate_gtSEXP, SEXP shape_ipSEXP, SEXP rate_ipSEXP, SEXP meanlog_i2dSEXP, SEXP sdlog_i2dSEXP, SEXP prob_detection_casesSEXP, SEXP prob_detection_deathsSEXP, SEXP col_namesSEXP, SEXP features_matrixSEXP, SEXP effectsSEXP, SEXP initial_state_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type id(idSEXP);
    Rcpp::traits::input_parameter< const int >::type simulation_length(simulation_lengthSEXP);
    Rcpp::traits::input_parameter< const int >::type population(populationSEXP);
    Rcpp::traits::input_parameter< const double >::type seed_rate(seed_rateSEXP);
    Rcpp::traits::input_parameter< const int >::type seed_length(seed_lengthSEXP);
    Rcpp::traits::input_parameter< const double >::type R0(R0SEXP);
    Rcpp::traits::input_parameter< const double >::type ifr(ifrSEXP);
    Rcpp::traits::input_parameter< const double >::type shape_gt(shape_gtSEXP);
    Rcpp::traits::input_parameter< const double >::type rate_gt(rate_gtSEXP);
    Rcpp::traits::input_parameter< const double >::type shape_ip(shape_ipSEXP);
    Rcpp::traits::input_parameter< const double >::type rate_ip(rate_ipSEXP);
    Rcpp::traits::input_parameter< const double >::type meanlog_i2d(meanlog_i2dSEXP);
    Rcpp::traits::input_parameter< const double >::type sdlog_i2d(sdlog_i2dSEXP);
    Rcpp::traits::input_parameter< const double >::type prob_detection_cases(prob_detection_casesSEXP);
    Rcpp::traits::input_parameter< const double >::type prob_detection_deaths(prob_detection_deathsSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type col_names(col_namesSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type features_matrix(features_matrixSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type effects(effectsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::Nullable<Rcpp::IntegerVector> >::type initial_state_(initial_state_SEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_epidemic(id, simulation_length, population, seed_rate, seed_length, R0, ifr, shape_gt, rate_gt, shape_ip, rate_ip, meanlog_i2d, sdlog_i2d, prob_detection_cases, prob_detection_deaths, col_names, features_matrix, effects, initial_state_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_episim_simulate_epidemic", (DL_FUNC) &_episim_simulate_epidemic, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_episim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
